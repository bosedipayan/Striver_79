class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n=nums.size();
        
        sort(nums.begin(),nums.end());
        
        set<vector<int>> st;
        for(int i=0;i<n-2;i++)
        {
            if(i>0 && nums[i]==nums[i-1]) continue;
            int newTarget = 0 - nums[i];
            
            int l=i+1,h=n-1;
            while(l < h)
            {
                if(nums[l]+nums[h] == newTarget)
                {
                    st.insert({nums[i],nums[l],nums[h]});
                    l++;
                    h--;
                }
                else if(nums[l]+nums[h] < newTarget)
                {
                    l++;
                }
                else
                {
                    h--;
                }
            }
        }
        
        vector<vector<int>> ans;
        for(auto it:st)
        {
            ans.push_back(it);
        }
        return ans;
        
        /*
        vector<vector<int>> ans;
        int n=nums.size();
        sort(nums.begin(),nums.end());
        
        for(int i=0;i<n;i++)
        {
            if(i>0 && nums[i]==nums[i-1]) continue;
            
            int j=i+1,k=n-1;
            while(j<k)
            {
                if(nums[i]+nums[j]+nums[k] == 0)
                {
                    ans.push_back({nums[i],nums[j],nums[k]});

                    int res1=nums[j];
                    while(j<k && res1==nums[j]) j++;

                    int res2=nums[k];
                    while(j<k && res2==nums[k]) k--;
                }
                else if(nums[i]+nums[j]+nums[k] < 0)
                {
                    j++;
                }
                else if(nums[i]+nums[j]+nums[k] > 0)
                {
                    k--;
                }
            }
        }
        return ans;
        */
    }
};
